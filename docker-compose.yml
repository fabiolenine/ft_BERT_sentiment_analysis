version: '3.8'

services:
  # BERT Sentiment Analysis API
  bert-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
      - TRANSFORMERS_CACHE=/app/.cache/huggingface
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bert-network

  # Training service (optional - run on demand)
  bert-trainer:
    build:
      context: .
      dockerfile: Dockerfile
    command: python src/bert_sentiment_trainer.py
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
      - TRANSFORMERS_CACHE=/app/.cache/huggingface
    profiles:
      - training
    networks:
      - bert-network

  # Jupyter notebook service (optional - for development)
  bert-notebook:
    build:
      context: .
      dockerfile: Dockerfile
    command: jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root
    ports:
      - "8888:8888"
    volumes:
      - ./:/app
    environment:
      - PYTHONPATH=/app/src:/app
      - PYTHONUNBUFFERED=1
    profiles:
      - development
    networks:
      - bert-network

  # Monitoring with Prometheus (optional)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    profiles:
      - monitoring
    networks:
      - bert-network

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
    profiles:
      - monitoring
    networks:
      - bert-network

networks:
  bert-network:
    driver: bridge

volumes:
  grafana-storage: